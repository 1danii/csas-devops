openapi: 3.0.0
info:
  title: CSAS Hackaton API
  version: 1.0.0
servers:
  - url: https://hackaton-api.fly.dev/api/v1
    description: API server
paths:
  /automations:
    get:
      tags: [Automations]
      description: List automations
      security:
        - basicAuth: []
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/search"
        - in: query
          name: id_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: id_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: id_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: id_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: id_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
        - in: query
          name: type_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: type_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: type_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: type_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: type_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
        - in: query
          name: state_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: state_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: state_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: state_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: state_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
        - in: query
          name: last_activity_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: last_activity_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: last_activity_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: last_activity_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: last_activity_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
      responses:
        "200":
          description: Collection of automation instances response
          headers:
            X-Total-Count:
              $ref: "#/components/headers/X-Total-Count"
            X-Filtered-Count:
              $ref: "#/components/headers/X-Filtered-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Automation"
  /automations/{id}:
    get:
      tags: [Automations]
      description: Get automation
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the automation
      responses:
        "200":
          description: Automation response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Automation"
  /automations/{id}/logs:
    get:
      tags: [Automations]
      description: Get automation logs
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the automation
      responses:
        "200":
          description: Collection of automation instance logs
          headers:
            X-Total-Count:
              $ref: "#/components/headers/X-Total-Count"
            X-Filtered-Count:
              $ref: "#/components/headers/X-Filtered-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AutomationLog"
  /automation-types:
    get:
      tags: [Automations]
      description: List automation types
      security:
        - basicAuth: []
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/search"
        - in: query
          name: type_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: type_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: type_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: type_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: type_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
        - in: query
          name: initial_state_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: initial_state_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: initial_state_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: initial_state_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: initial_state_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
        - in: query
          name: end_state_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: end_state_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: end_state_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: end_state_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: end_state_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
      responses:
        "200":
          description: Collection of automation types response
          headers:
            X-Total-Count:
              $ref: "#/components/headers/X-Total-Count"
            X-Filtered-Count:
              $ref: "#/components/headers/X-Filtered-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AutomationType"
  /automation-types/{type}:
    get:
      tags: [Automations]
      description: Get automation type
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: The automation type
      responses:
        "200":
          description: Automation type response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationType"
  /sas:
    get:
      tags: [SAS]
      description: List SAS
      security:
        - basicAuth: []
      responses:
        "200":
          description: Collection of SAS
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SAS"
  /runners:
    get:
      tags: [Runners]
      description: List runners
      security:
        - basicAuth: []
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/search"
        - in: query
          name: runner_group_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: runner_group_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: runner_group_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: runner_group_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: runner_group_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
        - in: query
          name: organization_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: organization_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: organization_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: organization_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: organization_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
        - in: query
          name: state_eq
          schema:
            type: string
          required: false
          description: Filters by equality
        - in: query
          name: state_ne
          schema:
            type: string
          required: false
          description: Filters by inequality
        - in: query
          name: state_like
          schema:
            type: string
          required: false
          description: Filters by partial match using *
        - in: query
          name: state_start
          schema:
            type: string
          required: false
          description: Filters properties that start with a value
        - in: query
          name: state_end
          schema:
            type: string
          required: false
          description: Filters properties that end with a value
      responses:
        "200":
          description: Collection of automation instances response
          headers:
            X-Total-Count:
              $ref: "#/components/headers/X-Total-Count"
            X-Filtered-Count:
              $ref: "#/components/headers/X-Filtered-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Runner"
  /runners/{id}:
    get:
      tags: [Runners]
      description: Get runner
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the runner
      responses:
        "200":
          description: Runner response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runner"
  /jobs:
    get:
      tags: [Runners]
      description: List jobs
      security:
        - basicAuth: []
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/search"
      responses:
        "200":
          description: Collection of automation instances response
          headers:
            X-Total-Count:
              $ref: "#/components/headers/X-Total-Count"
            X-Filtered-Count:
              $ref: "#/components/headers/X-Filtered-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
  /jobs/{id}:
    get:
      tags: [Runners]
      description: Get jobs
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the job
      responses:
        "200":
          description: Job response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
  /metrics:
    get:
      tags: [Runners]
      description: List metrics
      security:
        - basicAuth: []
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/order"
        - $ref: "#/components/parameters/search"
      responses:
        "200":
          description: Collection of automation instances response
          headers:
            X-Total-Count:
              $ref: "#/components/headers/X-Total-Count"
            X-Filtered-Count:
              $ref: "#/components/headers/X-Filtered-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MetricWithRunner"
  /metrics/{runner}:
    get:
      tags: [Runners]
      description: Get metrics by runner
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: runner
          schema:
            type: string
          required: true
          description: ID of the runner
      responses:
        "200":
          description: Runner response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricWithRunner"

components:
  parameters:
    page:
      name: page
      in: query
      description: Page number
      required: false
      schema:
        type: integer
        default: 1
    limit:
      name: limit
      in: query
      description: Number of items per page
      required: false
      schema:
        type: integer
        default: 10
        maximum: 100
    sort:
      name: sort
      in: query
      description: Sort field
      required: false
      schema:
        type: string
    order:
      name: order
      in: query
      description: Sort order
      required: false
      schema:
        type: string
        enum: [asc, desc]
        default: asc
    search:
      name: search
      in: query
      description: To search an array, you can use the search query parameter. Search is a special kind of filter that will look for a partial match in any values (with nesting) in the array.
      required: false
      schema:
        type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  headers:
    X-Total-Count:
      schema:
        type: integer
      description: total number of items in the bucket
    X-Filtered-Count:
      schema:
        type: integer
      description: number of items after filtering (not taking into account pagination)
  schemas:
    State:
      type: string
    AutomationTypeId:
      type: string
    Automation:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/AutomationTypeId"
        state:
          $ref: "#/components/schemas/State"
        last_activity:
          type: string
          format: date-time
      required:
        - id
        - type
        - state
        - last_activity
    AutomationLog:
      type: object
      properties:
        automation_id:
          type: string
        timestamp:
          type: string
          format: date-time
        level:
          type: string
        type:
          $ref: "#/components/schemas/AutomationTypeId"
        from_state:
          $ref: "#/components/schemas/State"
        to_state:
          $ref: "#/components/schemas/State"
        description:
          type: string
      required:
        - automation_id
        - timestamp
        - level
        - type
        - from_state
        - to_state
        - description
    AutomationType:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AutomationTypeId"
        states:
          type: array
          items:
            $ref: "#/components/schemas/State"
        initial_state:
          $ref: "#/components/schemas/State"
        end_state:
          $ref: "#/components/schemas/State"
        transitions:
          type: array
          items:
            $ref: "#/components/schemas/Transition"
      required:
        - id
        - name
        - description
        - created_at
        - updated_at
    Transition:
      type: object
      properties:
        from_state:
          $ref: "#/components/schemas/State"
        to_state:
          $ref: "#/components/schemas/State"
        event:
          type: string
          nullable: true
        action:
          type: string
          nullable: true
    SAS:
      type: string
    RunnerState:
      type: string
      enum: [idle, active, failed, offline]
    Runner:
      type: object
      properties:
        id:
          type: string
        state:
          $ref: "#/components/schemas/RunnerState"
        runner_group:
          type: string
        organization:
          type: string
      required:
        - id
        - state
        - runner_group
        - organization
    Job:
      type: object
      properties:
        id:
          type: string
        state:
          $ref: "#/components/schemas/RunnerState"
        organization:
          type: string
        SAS:
          $ref: "#/components/schemas/SAS"
        runner:
          type: string
        timestamp:
          type: string
          format: date-time
    Metric:
      type: object
      properties:
        cpu:
          type: number
          format: float
        memory:
          type: number
        network_receive:
          type: number
        network_transmit:
          type: number
        fs_reads:
          type: number
        fs_writes:
          type: number
    MetricWithRunner:
      type: object
      properties:
        runner:
          type: string
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/Metric"
